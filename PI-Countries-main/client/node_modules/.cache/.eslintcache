[{"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\index.js":"1","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\App.js":"2","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\store\\index.js":"4","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\reducer\\index.js":"5","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\Home.jsx":"6","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\Card.jsx":"7","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\actions\\index.js":"8","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\LandingPage.jsx":"9","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\Paginado.jsx":"10","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\SearchBar.jsx":"11","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\Navbar.jsx":"12","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\AddActivity.jsx":"13","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\Details.jsx":"14"},{"size":633,"mtime":1663871950634,"results":"15","hashOfConfig":"16"},{"size":715,"mtime":1664828769619,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1662423952135,"results":"18","hashOfConfig":"16"},{"size":333,"mtime":1663799228943,"results":"19","hashOfConfig":"16"},{"size":3907,"mtime":1664829034944,"results":"20","hashOfConfig":"16"},{"size":5021,"mtime":1664835185677,"results":"21","hashOfConfig":"16"},{"size":486,"mtime":1664834990579,"results":"22","hashOfConfig":"16"},{"size":3125,"mtime":1664823171173,"results":"23","hashOfConfig":"16"},{"size":362,"mtime":1664332268977,"results":"24","hashOfConfig":"16"},{"size":735,"mtime":1664245070036,"results":"25","hashOfConfig":"16"},{"size":920,"mtime":1664494704501,"results":"26","hashOfConfig":"16"},{"size":2676,"mtime":1664491052169,"results":"27","hashOfConfig":"16"},{"size":9955,"mtime":1664634741880,"results":"28","hashOfConfig":"16"},{"size":2145,"mtime":1664834678516,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1d0ae3c",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\index.js",[],["60","61"],"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\App.js",[],"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\store\\index.js",[],"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\reducer\\index.js",[],"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\Home.jsx",["62","63","64"],"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\Card.jsx",["65"],"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\actions\\index.js",[],"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\LandingPage.jsx",[],"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\Paginado.jsx",[],"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\SearchBar.jsx",[],"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\Navbar.jsx",[],"C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\AddActivity.jsx",["66","67","68"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { postActivities, getActivities, getCountries } from \"../actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport s from \"./AddActivity.module.css\"\r\n\r\n\r\nfunction validate(input) {\r\n    let errors = {};\r\n    if (!input.name) {\r\n        //input es mi estado local, si en mi estado lical no existe un name\r\n        errors.name = \"Nombre de la actividad requerido\"; //en mi objeto errors voy a pner un string que diga \"nombre requerido\"\r\n    } else if (!input.difficulty) {\r\n        errors.difficulty = \"Nivel de dificultad requerido\";\r\n    } else if (input.difficulty < 1 || input.difficulty > 5) {\r\n        errors.difficulty = \"Nivel de dificultad no valido (1-5)\";\r\n    } else if (!input.duration) {\r\n        errors.duration = \"Duración de la actividad requerida\";\r\n    } else if (input.duration > 24) {\r\n        errors.duration = \"Duración no valida (0hs-24hs)\";\r\n    } else if (input.season.length === 0) {\r\n        errors.season = \"Temporada de la actividad requerida\";\r\n    } else if (input.countries.length < 1) {\r\n        errors.countries = \"País/paises requeridos\";\r\n    }\r\n    return errors;\r\n}\r\n\r\n\r\nexport default function ActivityCreate() {\r\n    const dispatch = useDispatch()\r\n    const countries = useSelector((state) => state.countries)\r\n    const history = useHistory();\r\n    const [errors, setErrors] = useState({\r\n        enablebutton: true,\r\n    }); //estado local vacío para mostrar errores\r\n\r\n    const [input, setInput] = useState({\r\n        name: \"\",\r\n        difficulty: \"\",\r\n        duration: \"\",\r\n        season: [],\r\n        countries: [], //lo seteo en un array para tener la posibilidad de poner más de una\r\n\r\n    });\r\n\r\n    const thereAreErrors = Object.values(errors).some((error) => error);\r\n\r\n    function handleChange(e) {\r\n        setInput({\r\n            ...input,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        console.log(input)\r\n    }\r\n\r\n    function handleCheck(e) {\r\n        console.log(e.target.value, e.target.checked)\r\n        if (e.target.checked) {\r\n            setInput({\r\n                ...input,\r\n                season: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\nconsole.log(input)\r\n\r\n    function handleSelectCountries(e) {\r\n        setInput({\r\n            ...input,\r\n            countries: [...input.countries, e.target.value]\r\n        })\r\n    }\r\n\r\n    //     const selectCountry = JSON.parse(e.target.value);\r\n    //     const val = input.countries(\r\n    //         (countries) => countries.name === selectCountry.name\r\n    //     );\r\n    //     if (!val) {\r\n    //         const newInput = {\r\n    //             ...input,\r\n    //             countries: [...input.countries, selectCountry],\r\n    //             id: [...input.id, selectCountry.name],\r\n    //         };\r\n    //         setInput(newInput);\r\n    //         setErrors(validate(newInput));\r\n    //     }\r\n    //     e.target.value = \"\";\r\n    \r\n    // console.log(input.id);\r\n\r\n    function handleDelete(d) {\r\n        const newInput = {\r\n            ...input,\r\n            countries: input.countries.filter((country) => country !== d), //filtro por todo lo que no sea esae elemento\r\n        };\r\n        console.log(newInput)\r\n        setInput(newInput);\r\n        setErrors(validate(newInput));\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        console.log(input)\r\n        dispatch(postActivities(input));\r\n        alert(\"Actividad creada\");\r\n        // setInput({\r\n        //     name: \"\",\r\n        //     difficulty: \"\",\r\n        //     duration: \"\",\r\n        //     season: [],\r\n        //     countries: [],\r\n        // });\r\n        // //ya se creó la actividad llevame a ver si está creado - vuelve solo a home\r\n        history.push(\"/countries\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getCountries())\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/countries'><button>volver</button></Link>\r\n            <h1>Crea tu Actividad!!!</h1>\r\n            <form onSubmit={(e) => handleSubmit(e)}>\r\n                <div>\r\n                    <label>Nombre:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={input.name}\r\n                        name=\"name\"\r\n                        onChange={(e) => handleChange(e)}\r\n                        placeholder=\"--Nombre de la actividad--\" />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"range\"\r\n                        id=\"get\"\r\n                        name=\"difficulty\"\r\n                        value={input.difficulty}\r\n                        min=\"1\"\r\n                        max=\"5\"\r\n                        step=\"1\"\r\n                        onChange={(e) => handleChange(e)}\r\n                        className={s.input2}\r\n                        required\r\n                        // value=\"1\"\r\n                        list=\"difficulty\"\r\n                    />\r\n                    <p>{input.difficulty}</p>\r\n                    <datalist id=\"difficulty\">\r\n                        <option value=\"1\"></option>\r\n                        <option value=\"2\"></option>\r\n                        <option value=\"3\"></option>\r\n                        <option value=\"4\"></option>\r\n                        <option value=\"5\"></option>\r\n                    </datalist>\r\n                    {/* <input type=\"text\" id=\"put\" /> */}\r\n                </div>\r\n                <div>\r\n                    <label>Duracion:</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={input.duration}\r\n                        name=\"duration\" \r\n                        onChange={(e) => handleChange(e)}/>\r\n                </div>\r\n                <div>\r\n            <label className={s.alllabel}>Temporada / s:</label>\r\n                    <fieldset className={s.divradio}>\r\n                        {/* <legend>Temporada:</legend> */}\r\n                        {/* <label>Temporada:</label> */}\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                value=\"Summer\"\r\n                                onChange={(e) => handleCheck(e)}\r\n                            // required\r\n                            />\r\n                            Verano\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                value='Autumn'\r\n                                onChange={(e) => handleCheck(e)}\r\n                            // required\r\n                            />\r\n                            Otoño\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                value='Winter'\r\n                                onChange={(e) => handleCheck(e)}\r\n                            // required\r\n                            />\r\n                            Invierno\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                value='Spring'\r\n                                onChange={(e) => handleCheck(e)}\r\n                            // required\r\n                            />\r\n                            Primavera\r\n                        </label>\r\n\r\n                        {/* <select onChange={(e) => handleChangeSeason(e)} required> */}\r\n                        {/* <option value=\"\" disable selected hidden> Seleccionar una o más temporadas</option>  */}\r\n                        {/* hidden -> oculta la opción */}\r\n                        {/* {season.map((s) => (\r\n                <option value={s} name=\"season\">{s}</option>\r\n              ))} */}\r\n\r\n                        {/* </select> */}\r\n                        {/* <ul>\r\n            {input.season.map((s) => (\r\n                <li>{s}</li>\r\n              ))} */}\r\n                        {/* ↑lista que va a tomar mi estado input.countries, y me va a renderizar cada cada cosa que vaya marcando en el select/ para ver lo que voy seleccionando */}\r\n                        {/* </ul> */}\r\n                    </fieldset>\r\n                    {errors.season && ( //si existe un error en el nombre, entonces renderizame un p que diga el error\r\n                        <p>{errors.season}</p>\r\n                    )}\r\n                </div>\r\n                <select name=\"countries\" onChange={(e) => handleSelectCountries(e)}\r\n                value = \"\"\r\n                >\r\n                    <option value={\"\"} disable selected hidden>\r\n                        {\" \"}\r\n                        --Seleccionar uno o más países--\r\n                    </option>\r\n                    {countries\r\n                        .filter((country) =>(!input.countries.includes(country.id)))\r\n                        .sort((a,b) => a.name.localeCompare(b.name))\r\n                        .map((country) => (\r\n                        <option value={country.id}>{country.name}</option>\r\n                    ))}\r\n                </select>\r\n                <div>\r\n                    {input.countries.map(country => (\r\n                        <span>\r\n                            {countries.find((c) => c.id ===  country).name }\r\n                            <button type=\"button\" onClick={() => handleDelete(country)}>x</button>\r\n                        </span>\r\n                    )) } \r\n                </div>\r\n                <div>\r\n                    <button type=\"Submit\" >\r\n                        {\" \"}\r\n                        Crear\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n","C:\\Users\\Usuario\\Desktop\\PI-Coutry\\PI-Countries-main\\client\\src\\conponents\\Details.jsx",["69","70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":9,"nodeType":"78","messageId":"79","endLine":1,"endColumn":17},{"ruleId":"76","severity":1,"message":"80","line":20,"column":12,"nodeType":"78","messageId":"79","endLine":20,"endColumn":17},{"ruleId":"76","severity":1,"message":"81","line":22,"column":30,"nodeType":"78","messageId":"79","endLine":22,"endColumn":49},{"ruleId":"76","severity":1,"message":"82","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"83","line":3,"column":26,"nodeType":"78","messageId":"79","endLine":3,"endColumn":39},{"ruleId":"76","severity":1,"message":"84","line":47,"column":11,"nodeType":"78","messageId":"79","endLine":47,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":121,"column":8,"nodeType":"87","endLine":121,"endColumn":10,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":17,"column":7,"nodeType":"87","endLine":17,"endColumn":17,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":24,"column":17,"nodeType":"93","endLine":24,"endColumn":63},{"ruleId":"94","severity":1,"message":"95","line":32,"column":43,"nodeType":"96","messageId":"97","endLine":32,"endColumn":62,"fix":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'orden' is assigned a value but never used.","'setCountriesPerPage' is assigned a value but never used.","'Link' is defined but never used.","'getActivities' is defined but never used.","'thereAreErrors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["102"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-whitespace-before-property","Unexpected whitespace before property population.","MemberExpression","unexpectedWhitespace",{"range":"103","text":"104"},"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},[1254,1256],".","Update the dependencies array to be: [dispatch]",{"range":"109","text":"110"},"Update the dependencies array to be: [dispatch, id]",{"range":"111","text":"112"},[3926,3928],"[dispatch]",[581,591],"[dispatch, id]"]