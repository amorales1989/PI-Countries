{"ast":null,"code":"const initialState = {\n  countries: [],\n  allCountries: [],\n  deta,\n  countriesBackup: [],\n  allActivities: [],\n  activities: []\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case `GET_COUNTRIES`:\n      return { ...state,\n        countries: action.payload,\n        allCountries: action.payload\n      };\n\n    case 'FILTER_BY_CONTINENT':\n      const allCountries = state.allCountries;\n      const continentFiltered = action.payload === 'All' ? allCountries : allCountries.filter(el => el.continent === action.payload);\n      return { ...state,\n        countries: continentFiltered\n      };\n\n    case 'ORDER_BY_NAME':\n      action.payload === \"asc\" ? state.countries.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        if (b.name > a.name) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.countries.sort(function (a, b) {\n        if (a.name > b.name) {\n          return -1;\n        }\n\n        if (b.name > a.name) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        countries: state.countries\n      };\n\n    case 'ORDER_BY_POPULATION':\n      action.payload === \"min\" ? state.countries.sort(function (a, b) {\n        if (a.population > b.population) {\n          return 1;\n        }\n\n        if (b.population > a.population) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.countries.sort(function (a, b) {\n        if (a.population > b.population) {\n          return -1;\n        }\n\n        if (b.population > a.population) {\n          return 1;\n        }\n\n        return 0;\n      });\n      return { ...state,\n        countries: state.countries\n      };\n\n    case 'GET_NAME_COUNTRIES':\n      return { ...state,\n        countries: action.payload\n      };\n\n    case \"POST_ACTIVITIES\":\n      return { ...state //el estado me lo deja como está, me crea una ruta nueva\n\n      };\n\n    case 'GET_ACTIVITIES':\n      //console.log(action.payload)\n      return { ...state,\n        activities: action.payload\n      };\n\n    case \"FILTER_BY_ACTIVITIES\":\n      const countries = state.allCountries;\n      console.log(countries, action.payload);\n      const countriesFiltered = countries.filter(c => {\n        var _c$Activities;\n\n        return (_c$Activities = c.Activities) === null || _c$Activities === void 0 ? void 0 : _c$Activities.find(c => {\n          return c.name === action.payload;\n        });\n      });\n\n      if (action.payload === 'todas') {\n        return { ...state,\n          countries: countries.filter(country => {\n            var _country$Activities;\n\n            return ((_country$Activities = country.Activities) === null || _country$Activities === void 0 ? void 0 : _country$Activities.length) > 0;\n          })\n        };\n      } else {\n        return { ...state,\n          countries: countriesFiltered\n        };\n      }\n\n    case 'GET_DETAILS':\n      {\n        return { ...state,\n          details: [action.payload]\n        };\n      }\n\n    case 'CLEAN_DETAILS':\n      {\n        return { ...state,\n          details: []\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"names":["initialState","countries","allCountries","deta","countriesBackup","allActivities","activities","rootReducer","state","action","type","payload","continentFiltered","filter","el","continent","sort","a","b","name","population","console","log","countriesFiltered","c","Activities","find","country","length","details"],"sources":["C:/Users/Usuario/Desktop/PI-Coutry/PI-Countries-main/client/src/reducer/index.js"],"sourcesContent":["\r\nconst initialState = {\r\n    countries: [],\r\n    allCountries: [],\r\n    deta,\r\n    countriesBackup: [],\r\n    allActivities: [],\r\n    activities: [],\r\n}\r\n\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case `GET_COUNTRIES`:\r\n            return {\r\n                ...state,\r\n                countries: action.payload,\r\n                allCountries: action.payload\r\n            }\r\n        case 'FILTER_BY_CONTINENT':\r\n            const allCountries = state.allCountries\r\n            const continentFiltered = action.payload === 'All' ? allCountries :\r\n                allCountries.filter(el => el.continent === action.payload)\r\n            return {\r\n                ...state,\r\n                countries: continentFiltered\r\n            }\r\n\r\n        case 'ORDER_BY_NAME':\r\n            action.payload === \"asc\" ? state.countries.sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1\r\n                }\r\n                if (b.name > a.name) {\r\n                    return -1\r\n                }\r\n                return 0\r\n            }) :\r\n                state.countries.sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                        return -1\r\n                    }\r\n                    if (b.name > a.name) {\r\n                        return 1\r\n                    }\r\n                    return 0\r\n                })\r\n            return {\r\n                ...state,\r\n                countries: state.countries\r\n\r\n            }\r\n\r\n            case 'ORDER_BY_POPULATION':\r\n            action.payload === \"min\" ? state.countries.sort(function (a, b) {\r\n                if (a.population > b.population) {\r\n                    return 1\r\n                }\r\n                if (b.population > a.population) {\r\n                    return -1\r\n                }\r\n                return 0\r\n            }) :\r\n                state.countries.sort(function (a, b) {\r\n                    if (a.population > b.population) {\r\n                        return -1\r\n                    }\r\n                    if (b.population > a.population) {\r\n                        return 1\r\n                    }\r\n                    return 0\r\n                })\r\n            return {\r\n                ...state,\r\n                countries: state.countries\r\n\r\n            }\r\n\r\n        case 'GET_NAME_COUNTRIES':\r\n            return {\r\n                ...state,\r\n                countries: action.payload\r\n            }\r\n\r\n            case \"POST_ACTIVITIES\":\r\n                return {\r\n                  ...state,  //el estado me lo deja como está, me crea una ruta nueva\r\n                };\r\n        case 'GET_ACTIVITIES':\r\n            //console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                activities: action.payload,\r\n            }    \r\n\r\n        case \"FILTER_BY_ACTIVITIES\":\r\n            const countries = state.allCountries\r\n            console.log(countries,action.payload)\r\n            const countriesFiltered = countries\r\n            .filter((c) => { return c.Activities?.find((c) => { return c.name === action.payload; }); });\r\n\r\n            if (action.payload === 'todas') {\r\n                return { ...state, countries: countries.filter((country) => country.Activities?.length > 0) }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    countries: countriesFiltered\r\n                }\r\n            }  \r\n            \r\n            case 'GET_DETAILS':{\r\n                return{\r\n                    ...state,\r\n                    details:[action.payload]\r\n                }\r\n            }\r\n            case 'CLEAN_DETAILS':{\r\n                return{\r\n                    ...state,\r\n                    details:[]\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}