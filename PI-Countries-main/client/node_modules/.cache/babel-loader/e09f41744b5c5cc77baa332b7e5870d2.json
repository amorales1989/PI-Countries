{"ast":null,"code":"// import React, {useState,useEffect} from \"react\";\n// import { Link, useHistory } from \"react-router-dom\";\n// import { postActivities, getActivities } from \"../actions\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// export default function ActivityCreate(){\n//     const dispatch = useDispatch()\n//     const activities = useSelector((state) => state.activities)\n//     const [input, setInput] = useState({\n//         name: \"\",\n//         difficulty: \"\",\n//         duration: \"\",\n//         season: [],\n//         countries: [], //lo seteo en un array para tener la posibilidad de poner más de una\n//         id: [],\n//     });\n//     function handleChange(e){\n//         setInput({\n//             [e.target.name] : e.target.value\n//         })\n//         console.log(input)\n//     }\n//     function handleCheck(e){\n//         if (e.target.checked){\n//             setInput({\n//                 ...input,\n//                 status: e.target.value\n//             })\n//         }\n//     }\n//     function handleSelectCountries(e){\n//         setInput({\n//             ...input,\n//             activities: [...input.activities,e.target.value]\n//         })\n//     }\n//     useEffect(() => {\n//         dispatch(getActivities())\n//     }, []);\n//     return(\n//     <div className={s.bodyActivityCreate}>\n//         {/* <div>\n//         <NavBar />\n//       </div> */}\n//         {/* //hago esto por si me arrepiento y quiero volver a home */}\n//         {/* <Link to=\"/home\">\n//         <button className={s.btnVolAct}>Volver</button>\n//       </Link> */}\n//         {/* todo lo que se envuelva en un link va a funcionar como redirección */}\n//         {/* <div className=\"container\"> */}\n//         <div className={s.drop1}></div>\n//         <div className={s.drop2}></div>\n//         <div className={s.drop5}></div>\n//         <div className={s.cardForm}>\n//             <h1>Crear actividad turística</h1>\n//             <form onSubmit={(e) => handleSubmit(e)}>\n//                 <div className={s.inputgroup}>\n//                     <label className={s.alllabel}>Nombre:</label>\n//                     <br></br>\n//                     <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         value={input.name}\n//                         onChange={(e) => handleChange(e)}\n//                         placeholder=\"--Nombre de la actividad--\"\n//                         className={s.input1}\n//                         required\n//                     />\n//                     {errors.name && ( //si existe un error en el nombre, entonces renderizame un p que diga el error\n//                         <p>{errors.name}</p>\n//                     )}\n//                 </div>\n//                 <br></br>\n//                 <div>\n//                     <label className={s.alllabel}>Dificultad (1-5):</label>\n//                     <br></br>\n//                     <div className={s.divradio}>\n//                         <input\n//                             type=\"range\"\n//                             id=\"get\"\n//                             name=\"difficulty\"\n//                             value={input.difficulty}\n//                             min=\"1\"\n//                             max=\"5\"\n//                             step=\"1\"\n//                             onChange={(e) => handleChange(e)}\n//                             className={s.input2}\n//                             required\n//                             // value=\"1\"\n//                             list=\"difficulty\"\n//                         />\n//                         <p>{input.difficulty}</p>\n//                         <datalist id=\"difficulty\">\n//                             <option value=\"1\"></option>\n//                             <option value=\"2\"></option>\n//                             <option value=\"3\"></option>\n//                             <option value=\"4\"></option>\n//                             <option value=\"5\"></option>\n//                         </datalist>\n//                         {/* <input type=\"text\" id=\"put\" /> */}\n//                     </div>\n//                     {errors.difficulty && ( //si existe un error en el nombre, entonces renderizame un p que diga el error\n//                         <p>{errors.difficulty}</p>\n//                     )}\n//                 </div>\n//                 <br></br>\n//                 <div>\n//                     <label className={s.alllabel}>Duración:</label>\n//                     <br></br>\n//                     <input\n//                         type=\"time\"\n//                         name=\"duration\"\n//                         value={input.duration}\n//                         onChange={(e) => handleChange(e)}\n//                         placeholder=\"--Duración en horas--\"\n//                         className={s.input1}\n//                         required\n//                     />\n//                     {errors.duration && ( //si existe un error en el nombre, entonces renderizame un p que diga el error\n//                         <p>{errors.duration}</p>\n//                     )}\n//                 </div>\n//                 <br></br>\n//                 <div>\n//                     <label className={s.alllabel}>Temporada / s:</label>\n//                     <fieldset className={s.divradio}>\n//                         {/* <legend>Temporada:</legend> */}\n//                         {/* <label>Temporada:</label> */}\n//                         <label>\n//                             <input\n//                                 type=\"checkbox\"\n//                                 name=\"seasonv\"\n//                                 value=\"Verano\"\n//                                 onChange={(e) => handleCheck(e)}\n//                             // required\n//                             />\n//                             Verano\n//                         </label>\n//                         <label>\n//                             <input\n//                                 type=\"checkbox\"\n//                                 name=\"seasono\"\n//                                 value=\"Otoño\"\n//                                 onChange={(e) => handleCheck(e)}\n//                             // required\n//                             />\n//                             Otoño\n//                         </label>\n//                         <label>\n//                             <input\n//                                 type=\"checkbox\"\n//                                 name=\"seasoni\"\n//                                 value=\"Invierno\"\n//                                 onChange={(e) => handleCheck(e)}\n//                             // required\n//                             />\n//                             Invierno\n//                         </label>\n//                         <label>\n//                             <input\n//                                 type=\"checkbox\"\n//                                 name=\"seasonp\"\n//                                 value=\"Primavera\"\n//                                 onChange={(e) => handleCheck(e)}\n//                             // required\n//                             />\n//                             Primavera\n//                         </label>\n//                         {/* <select onChange={(e) => handleChangeSeason(e)} required> */}\n//                         {/* <option value=\"\" disable selected hidden> Seleccionar una o más temporadas</option>  */}\n//                         {/* hidden -> oculta la opción */}\n//                         {/* {season.map((s) => (\n//                 <option value={s} name=\"season\">{s}</option>\n//               ))} */}\n//                         {/* </select> */}\n//                         {/* <ul>\n//             {input.season.map((s) => (\n//                 <li>{s}</li>\n//               ))} */}\n//                         {/* ↑lista que va a tomar mi estado input.countries, y me va a renderizar cada cada cosa que vaya marcando en el select/ para ver lo que voy seleccionando */}\n//                         {/* </ul> */}\n//                     </fieldset>\n//                     {errors.season && ( //si existe un error en el nombre, entonces renderizame un p que diga el error\n//                         <p>{errors.season}</p>\n//                     )}\n//                 </div>\n//                 <br></br>\n//                 <div>\n//                     <label className={s.alllabel}>Paises:</label>\n//                     <br></br>\n//                     <select\n//                         className={s.divpaises}\n//                         onChange={(e) => handleSelectCountries(e)}\n//                     // required\n//                     >\n//                         <option value={\"\"} disable selected hidden>\n//                             {\" \"}\n//                             --Seleccionar uno o más países--\n//                         </option>\n//                         {countries.map((country) => (\n//                             <option value={JSON.stringify(country)}>{country.name}</option>\n//                         ))}\n//                     </select>\n//                     <ul className={s.ulchips}>\n//                         {input.countries.map((c) => (\n//                             <div className={s.chip_content}>\n//                                 <img\n//                                     src={c.flags}\n//                                     alt=\"flag\"\n//                                     height=\"25px\"\n//                                     width=\"25px\"\n//                                     className={s.chipimg}\n//                                 />\n//                                 <p className={s.pchip}>{c.name}</p>\n//                                 <div className={s.delete}>\n//                                     <span onClick={() => handleDelete(c)}>x</span>\n//                                 </div>\n//                             </div>\n//                         ))}\n//                         {/* ↑lista que va a tomar mi estado input.countries, y me va a renderizar cada cada cosa que vaya marcando en el select/ para ver lo que voy seleccionando */}\n//                     </ul>\n//                     {errors.countries && ( //si existe un error en el nombre, entonces renderizame un p que diga el error\n//                         <p>{errors.countries}</p>\n//                     )}\n//                 </div>\n//                 <div>\n//                     <button className={s.crear} type=\"submit\" disabled={thereAreErrors}>\n//                         {\" \"}\n//                         Crear\n//                     </button>\n//                 </div>\n//             </form>\n//         </div>\n//         <div className={s.drop3}></div>\n//         <div class={s.drop4}></div>\n//         <div class={s.drop6}></div>\n//         {/* </div> */}\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Usuario/Desktop/PI-Coutry/PI-Countries-main/client/src/conponents/AddActivity.jsx"],"sourcesContent":["// import React, {useState,useEffect} from \"react\";\r\n// import { Link, useHistory } from \"react-router-dom\";\r\n// import { postActivities, getActivities } from \"../actions\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\n// export default function ActivityCreate(){\r\n//     const dispatch = useDispatch()\r\n//     const activities = useSelector((state) => state.activities)\r\n\r\n//     const [input, setInput] = useState({\r\n//         name: \"\",\r\n//         difficulty: \"\",\r\n//         duration: \"\",\r\n//         season: [],\r\n//         countries: [], //lo seteo en un array para tener la posibilidad de poner más de una\r\n//         id: [],\r\n//     });\r\n\r\n//     function handleChange(e){\r\n//         setInput({\r\n//             [e.target.name] : e.target.value\r\n//         })\r\n//         console.log(input)\r\n//     }\r\n\r\n//     function handleCheck(e){\r\n//         if (e.target.checked){\r\n//             setInput({\r\n//                 ...input,\r\n//                 status: e.target.value\r\n//             })\r\n//         }\r\n//     }\r\n\r\n//     function handleSelectCountries(e){\r\n//         setInput({\r\n//             ...input,\r\n//             activities: [...input.activities,e.target.value]\r\n//         })\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         dispatch(getActivities())\r\n//     }, []);\r\n//     return(\r\n//     <div className={s.bodyActivityCreate}>\r\n//         {/* <div>\r\n//         <NavBar />\r\n//       </div> */}\r\n//         {/* //hago esto por si me arrepiento y quiero volver a home */}\r\n//         {/* <Link to=\"/home\">\r\n//         <button className={s.btnVolAct}>Volver</button>\r\n//       </Link> */}\r\n//         {/* todo lo que se envuelva en un link va a funcionar como redirección */}\r\n//         {/* <div className=\"container\"> */}\r\n//         <div className={s.drop1}></div>\r\n//         <div className={s.drop2}></div>\r\n//         <div className={s.drop5}></div>\r\n\r\n//         <div className={s.cardForm}>\r\n//             <h1>Crear actividad turística</h1>\r\n\r\n//             <form onSubmit={(e) => handleSubmit(e)}>\r\n//                 <div className={s.inputgroup}>\r\n//                     <label className={s.alllabel}>Nombre:</label>\r\n//                     <br></br>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         name=\"name\"\r\n//                         value={input.name}\r\n//                         onChange={(e) => handleChange(e)}\r\n//                         placeholder=\"--Nombre de la actividad--\"\r\n//                         className={s.input1}\r\n//                         required\r\n//                     />\r\n\r\n//                     {errors.name && ( //si existe un error en el nombre, entonces renderizame un p que diga el error\r\n//                         <p>{errors.name}</p>\r\n//                     )}\r\n//                 </div>\r\n//                 <br></br>\r\n//                 <div>\r\n//                     <label className={s.alllabel}>Dificultad (1-5):</label>\r\n//                     <br></br>\r\n//                     <div className={s.divradio}>\r\n//                         <input\r\n//                             type=\"range\"\r\n//                             id=\"get\"\r\n//                             name=\"difficulty\"\r\n//                             value={input.difficulty}\r\n//                             min=\"1\"\r\n//                             max=\"5\"\r\n//                             step=\"1\"\r\n//                             onChange={(e) => handleChange(e)}\r\n//                             className={s.input2}\r\n//                             required\r\n//                             // value=\"1\"\r\n//                             list=\"difficulty\"\r\n//                         />\r\n//                         <p>{input.difficulty}</p>\r\n//                         <datalist id=\"difficulty\">\r\n//                             <option value=\"1\"></option>\r\n//                             <option value=\"2\"></option>\r\n//                             <option value=\"3\"></option>\r\n//                             <option value=\"4\"></option>\r\n//                             <option value=\"5\"></option>\r\n//                         </datalist>\r\n//                         {/* <input type=\"text\" id=\"put\" /> */}\r\n//                     </div>\r\n\r\n//                     {errors.difficulty && ( //si existe un error en el nombre, entonces renderizame un p que diga el error\r\n//                         <p>{errors.difficulty}</p>\r\n//                     )}\r\n//                 </div>\r\n//                 <br></br>\r\n//                 <div>\r\n//                     <label className={s.alllabel}>Duración:</label>\r\n//                     <br></br>\r\n//                     <input\r\n//                         type=\"time\"\r\n//                         name=\"duration\"\r\n//                         value={input.duration}\r\n//                         onChange={(e) => handleChange(e)}\r\n//                         placeholder=\"--Duración en horas--\"\r\n//                         className={s.input1}\r\n//                         required\r\n//                     />\r\n//                     {errors.duration && ( //si existe un error en el nombre, entonces renderizame un p que diga el error\r\n//                         <p>{errors.duration}</p>\r\n//                     )}\r\n//                 </div>\r\n//                 <br></br>\r\n//                 <div>\r\n//                     <label className={s.alllabel}>Temporada / s:</label>\r\n//                     <fieldset className={s.divradio}>\r\n//                         {/* <legend>Temporada:</legend> */}\r\n//                         {/* <label>Temporada:</label> */}\r\n//                         <label>\r\n//                             <input\r\n//                                 type=\"checkbox\"\r\n//                                 name=\"seasonv\"\r\n//                                 value=\"Verano\"\r\n//                                 onChange={(e) => handleCheck(e)}\r\n//                             // required\r\n//                             />\r\n//                             Verano\r\n//                         </label>\r\n//                         <label>\r\n//                             <input\r\n//                                 type=\"checkbox\"\r\n//                                 name=\"seasono\"\r\n//                                 value=\"Otoño\"\r\n//                                 onChange={(e) => handleCheck(e)}\r\n//                             // required\r\n//                             />\r\n//                             Otoño\r\n//                         </label>\r\n//                         <label>\r\n//                             <input\r\n//                                 type=\"checkbox\"\r\n//                                 name=\"seasoni\"\r\n//                                 value=\"Invierno\"\r\n//                                 onChange={(e) => handleCheck(e)}\r\n//                             // required\r\n//                             />\r\n//                             Invierno\r\n//                         </label>\r\n//                         <label>\r\n//                             <input\r\n//                                 type=\"checkbox\"\r\n//                                 name=\"seasonp\"\r\n//                                 value=\"Primavera\"\r\n//                                 onChange={(e) => handleCheck(e)}\r\n//                             // required\r\n//                             />\r\n//                             Primavera\r\n//                         </label>\r\n\r\n//                         {/* <select onChange={(e) => handleChangeSeason(e)} required> */}\r\n//                         {/* <option value=\"\" disable selected hidden> Seleccionar una o más temporadas</option>  */}\r\n//                         {/* hidden -> oculta la opción */}\r\n//                         {/* {season.map((s) => (\r\n//                 <option value={s} name=\"season\">{s}</option>\r\n//               ))} */}\r\n\r\n//                         {/* </select> */}\r\n//                         {/* <ul>\r\n//             {input.season.map((s) => (\r\n//                 <li>{s}</li>\r\n//               ))} */}\r\n//                         {/* ↑lista que va a tomar mi estado input.countries, y me va a renderizar cada cada cosa que vaya marcando en el select/ para ver lo que voy seleccionando */}\r\n//                         {/* </ul> */}\r\n//                     </fieldset>\r\n//                     {errors.season && ( //si existe un error en el nombre, entonces renderizame un p que diga el error\r\n//                         <p>{errors.season}</p>\r\n//                     )}\r\n//                 </div>\r\n//                 <br></br>\r\n\r\n//                 <div>\r\n//                     <label className={s.alllabel}>Paises:</label>\r\n//                     <br></br>\r\n//                     <select\r\n//                         className={s.divpaises}\r\n//                         onChange={(e) => handleSelectCountries(e)}\r\n//                     // required\r\n//                     >\r\n//                         <option value={\"\"} disable selected hidden>\r\n//                             {\" \"}\r\n//                             --Seleccionar uno o más países--\r\n//                         </option>\r\n//                         {countries.map((country) => (\r\n//                             <option value={JSON.stringify(country)}>{country.name}</option>\r\n//                         ))}\r\n//                     </select>\r\n\r\n//                     <ul className={s.ulchips}>\r\n//                         {input.countries.map((c) => (\r\n//                             <div className={s.chip_content}>\r\n//                                 <img\r\n//                                     src={c.flags}\r\n//                                     alt=\"flag\"\r\n//                                     height=\"25px\"\r\n//                                     width=\"25px\"\r\n//                                     className={s.chipimg}\r\n//                                 />\r\n\r\n//                                 <p className={s.pchip}>{c.name}</p>\r\n//                                 <div className={s.delete}>\r\n//                                     <span onClick={() => handleDelete(c)}>x</span>\r\n//                                 </div>\r\n//                             </div>\r\n//                         ))}\r\n//                         {/* ↑lista que va a tomar mi estado input.countries, y me va a renderizar cada cada cosa que vaya marcando en el select/ para ver lo que voy seleccionando */}\r\n//                     </ul>\r\n//                     {errors.countries && ( //si existe un error en el nombre, entonces renderizame un p que diga el error\r\n//                         <p>{errors.countries}</p>\r\n//                     )}\r\n//                 </div>\r\n\r\n//                 <div>\r\n//                     <button className={s.crear} type=\"submit\" disabled={thereAreErrors}>\r\n//                         {\" \"}\r\n//                         Crear\r\n//                     </button>\r\n//                 </div>\r\n//             </form>\r\n//         </div>\r\n//         <div className={s.drop3}></div>\r\n//         <div class={s.drop4}></div>\r\n//         <div class={s.drop6}></div>\r\n\r\n//         {/* </div> */}\r\n//     </div>\r\n//   );\r\n\r\n// }"],"mappings},"metadata":{},"sourceType":"module"}